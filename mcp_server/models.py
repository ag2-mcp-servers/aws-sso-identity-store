# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-28T11:55:15+00:00

from __future__ import annotations

from enum import Enum
from typing import Any, List, Optional

from pydantic import BaseModel, Field, RootModel, SecretStr, conint, constr


class AccessDeniedException(RootModel[Any]):
    root: Any


class AttributePath(
    RootModel[constr(pattern=r'\p{L}+(?:\.\p{L}+){0,2}', min_length=1, max_length=255)]
):
    root: constr(pattern=r'\p{L}+(?:\.\p{L}+){0,2}', min_length=1, max_length=255)


class AttributeValue(BaseModel):
    pass


class ConflictException(RootModel[Any]):
    root: Any


class DeleteGroupMembershipResponse(BaseModel):
    pass


class DeleteGroupResponse(BaseModel):
    pass


class DeleteUserResponse(BaseModel):
    pass


class ExternalIdIdentifier(RootModel[SecretStr]):
    root: SecretStr


class ExternalIdIssuer(RootModel[SecretStr]):
    root: SecretStr


class GroupDisplayName(RootModel[SecretStr]):
    root: SecretStr


class IdentityStoreId(
    RootModel[
        constr(
            pattern=r'd-[0-9a-f]{10}$|^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}',
            min_length=1,
            max_length=36,
        )
    ]
):
    root: constr(
        pattern=r'd-[0-9a-f]{10}$|^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}',
        min_length=1,
        max_length=36,
    )


class InternalServerException(RootModel[Any]):
    root: Any


class MaxResults(RootModel[conint(ge=1, le=100)]):
    root: conint(ge=1, le=100)


class NextToken(
    RootModel[constr(pattern=r'[-a-zA-Z0-9+=/:]*', min_length=1, max_length=65535)]
):
    root: constr(pattern=r'[-a-zA-Z0-9+=/:]*', min_length=1, max_length=65535)


class ResourceId(
    RootModel[
        constr(
            pattern=r'([0-9a-f]{10}-|)[A-Fa-f0-9]{8}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{12}',
            min_length=1,
            max_length=47,
        )
    ]
):
    root: constr(
        pattern=r'([0-9a-f]{10}-|)[A-Fa-f0-9]{8}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{12}',
        min_length=1,
        max_length=47,
    )


class ResourceNotFoundException(RootModel[Any]):
    root: Any


class SensitiveBooleanType(RootModel[bool]):
    root: bool


class SensitiveStringType(RootModel[SecretStr]):
    root: SecretStr


class ServiceQuotaExceededException(RootModel[Any]):
    root: Any


class ThrottlingException(RootModel[Any]):
    root: Any


class UniqueAttribute(BaseModel):
    AttributePath_1: AttributePath = Field(..., alias='AttributePath')
    AttributeValue_1: AttributeValue = Field(..., alias='AttributeValue')


class UpdateGroupResponse(BaseModel):
    pass


class UpdateUserResponse(BaseModel):
    pass


class UserName(RootModel[SecretStr]):
    root: SecretStr


class ValidationException(RootModel[Any]):
    root: Any


class XAmzTarget(Enum):
    AWSIdentityStore_CreateGroup = 'AWSIdentityStore.CreateGroup'


class XAmzTarget1(Enum):
    AWSIdentityStore_CreateGroupMembership = 'AWSIdentityStore.CreateGroupMembership'


class XAmzTarget2(Enum):
    AWSIdentityStore_CreateUser = 'AWSIdentityStore.CreateUser'


class XAmzTarget3(Enum):
    AWSIdentityStore_DeleteGroup = 'AWSIdentityStore.DeleteGroup'


class XAmzTarget4(Enum):
    AWSIdentityStore_DeleteGroupMembership = 'AWSIdentityStore.DeleteGroupMembership'


class XAmzTarget5(Enum):
    AWSIdentityStore_DeleteUser = 'AWSIdentityStore.DeleteUser'


class XAmzTarget6(Enum):
    AWSIdentityStore_DescribeGroup = 'AWSIdentityStore.DescribeGroup'


class XAmzTarget7(Enum):
    AWSIdentityStore_DescribeGroupMembership = (
        'AWSIdentityStore.DescribeGroupMembership'
    )


class XAmzTarget8(Enum):
    AWSIdentityStore_DescribeUser = 'AWSIdentityStore.DescribeUser'


class XAmzTarget9(Enum):
    AWSIdentityStore_GetGroupId = 'AWSIdentityStore.GetGroupId'


class XAmzTarget10(Enum):
    AWSIdentityStore_GetGroupMembershipId = 'AWSIdentityStore.GetGroupMembershipId'


class XAmzTarget11(Enum):
    AWSIdentityStore_GetUserId = 'AWSIdentityStore.GetUserId'


class XAmzTarget12(Enum):
    AWSIdentityStore_IsMemberInGroups = 'AWSIdentityStore.IsMemberInGroups'


class XAmzTarget13(Enum):
    AWSIdentityStore_ListGroupMemberships = 'AWSIdentityStore.ListGroupMemberships'


class XAmzTarget14(Enum):
    AWSIdentityStore_ListGroupMembershipsForMember = (
        'AWSIdentityStore.ListGroupMembershipsForMember'
    )


class XAmzTarget15(Enum):
    AWSIdentityStore_ListGroups = 'AWSIdentityStore.ListGroups'


class XAmzTarget16(Enum):
    AWSIdentityStore_ListUsers = 'AWSIdentityStore.ListUsers'


class XAmzTarget17(Enum):
    AWSIdentityStore_UpdateGroup = 'AWSIdentityStore.UpdateGroup'


class XAmzTarget18(Enum):
    AWSIdentityStore_UpdateUser = 'AWSIdentityStore.UpdateUser'


class Address(BaseModel):
    Country: Optional[SensitiveStringType] = None
    Formatted: Optional[SensitiveStringType] = None
    Locality: Optional[SensitiveStringType] = None
    PostalCode: Optional[SensitiveStringType] = None
    Primary: Optional[SensitiveBooleanType] = None
    Region: Optional[SensitiveStringType] = None
    StreetAddress: Optional[SensitiveStringType] = None
    Type: Optional[SensitiveStringType] = None


class Addresses(RootModel[List[Address]]):
    root: List[Address] = Field(..., max_length=1, min_length=1)


class AttributeOperation(BaseModel):
    AttributePath_1: AttributePath = Field(..., alias='AttributePath')
    AttributeValue_1: Optional[AttributeValue] = Field(None, alias='AttributeValue')


class AttributeOperations(RootModel[List[AttributeOperation]]):
    root: List[AttributeOperation] = Field(..., max_length=100, min_length=1)


class CreateGroupMembershipResponse(BaseModel):
    IdentityStoreId_1: IdentityStoreId = Field(..., alias='IdentityStoreId')
    MembershipId: ResourceId


class CreateGroupRequest(BaseModel):
    Description: Optional[SensitiveStringType] = None
    DisplayName: Optional[GroupDisplayName] = None
    IdentityStoreId_1: IdentityStoreId = Field(..., alias='IdentityStoreId')


class CreateGroupResponse(BaseModel):
    GroupId: ResourceId
    IdentityStoreId_1: IdentityStoreId = Field(..., alias='IdentityStoreId')


class CreateUserResponse(BaseModel):
    IdentityStoreId_1: IdentityStoreId = Field(..., alias='IdentityStoreId')
    UserId: ResourceId


class DeleteGroupMembershipRequest(BaseModel):
    IdentityStoreId_1: IdentityStoreId = Field(..., alias='IdentityStoreId')
    MembershipId: ResourceId


class DeleteGroupRequest(BaseModel):
    GroupId: ResourceId
    IdentityStoreId_1: IdentityStoreId = Field(..., alias='IdentityStoreId')


class DeleteUserRequest(BaseModel):
    IdentityStoreId_1: IdentityStoreId = Field(..., alias='IdentityStoreId')
    UserId: ResourceId


class DescribeGroupMembershipRequest(BaseModel):
    IdentityStoreId_1: IdentityStoreId = Field(..., alias='IdentityStoreId')
    MembershipId: ResourceId


class DescribeGroupRequest(BaseModel):
    GroupId: ResourceId
    IdentityStoreId_1: IdentityStoreId = Field(..., alias='IdentityStoreId')


class DescribeUserRequest(BaseModel):
    IdentityStoreId_1: IdentityStoreId = Field(..., alias='IdentityStoreId')
    UserId: ResourceId


class Email(BaseModel):
    Primary: Optional[SensitiveBooleanType] = None
    Type: Optional[SensitiveStringType] = None
    Value: Optional[SensitiveStringType] = None


class Emails(RootModel[List[Email]]):
    root: List[Email] = Field(..., max_length=1, min_length=1)


class ExternalId(BaseModel):
    Id: ExternalIdIdentifier
    Issuer: ExternalIdIssuer


class ExternalIds(RootModel[List[ExternalId]]):
    root: List[ExternalId] = Field(..., max_length=10, min_length=1)


class Filter(BaseModel):
    AttributePath_1: AttributePath = Field(..., alias='AttributePath')
    AttributeValue: SensitiveStringType


class Filters(RootModel[List[Filter]]):
    root: List[Filter] = Field(..., max_length=1, min_length=0)


class GetGroupIdResponse(BaseModel):
    GroupId: ResourceId
    IdentityStoreId_1: IdentityStoreId = Field(..., alias='IdentityStoreId')


class GetGroupMembershipIdResponse(BaseModel):
    IdentityStoreId_1: IdentityStoreId = Field(..., alias='IdentityStoreId')
    MembershipId: ResourceId


class GetUserIdResponse(BaseModel):
    IdentityStoreId_1: IdentityStoreId = Field(..., alias='IdentityStoreId')
    UserId: ResourceId


class Group(BaseModel):
    Description: Optional[SensitiveStringType] = None
    DisplayName: Optional[GroupDisplayName] = None
    ExternalIds_1: Optional[ExternalIds] = Field(None, alias='ExternalIds')
    GroupId: ResourceId
    IdentityStoreId_1: IdentityStoreId = Field(..., alias='IdentityStoreId')


class GroupIds(RootModel[List[ResourceId]]):
    root: List[ResourceId] = Field(..., max_length=100, min_length=1)


class Groups(RootModel[List[Group]]):
    root: List[Group]


class ListGroupMembershipsRequest(BaseModel):
    GroupId: ResourceId
    IdentityStoreId_1: IdentityStoreId = Field(..., alias='IdentityStoreId')
    MaxResults_1: Optional[MaxResults] = Field(None, alias='MaxResults')
    NextToken_1: Optional[NextToken] = Field(None, alias='NextToken')


class ListGroupsRequest(BaseModel):
    Filters_1: Optional[Filters] = Field(None, alias='Filters')
    IdentityStoreId_1: IdentityStoreId = Field(..., alias='IdentityStoreId')
    MaxResults_1: Optional[MaxResults] = Field(None, alias='MaxResults')
    NextToken_1: Optional[NextToken] = Field(None, alias='NextToken')


class ListGroupsResponse(BaseModel):
    Groups_1: Groups = Field(..., alias='Groups')
    NextToken_1: Optional[NextToken] = Field(None, alias='NextToken')


class ListUsersRequest(BaseModel):
    Filters_1: Optional[Filters] = Field(None, alias='Filters')
    IdentityStoreId_1: IdentityStoreId = Field(..., alias='IdentityStoreId')
    MaxResults_1: Optional[MaxResults] = Field(None, alias='MaxResults')
    NextToken_1: Optional[NextToken] = Field(None, alias='NextToken')


class MemberId(BaseModel):
    UserId: Optional[ResourceId] = None


class Name(BaseModel):
    FamilyName: Optional[SensitiveStringType] = None
    Formatted: Optional[SensitiveStringType] = None
    GivenName: Optional[SensitiveStringType] = None
    HonorificPrefix: Optional[SensitiveStringType] = None
    HonorificSuffix: Optional[SensitiveStringType] = None
    MiddleName: Optional[SensitiveStringType] = None


class PhoneNumber(BaseModel):
    Primary: Optional[SensitiveBooleanType] = None
    Type: Optional[SensitiveStringType] = None
    Value: Optional[SensitiveStringType] = None


class PhoneNumbers(RootModel[List[PhoneNumber]]):
    root: List[PhoneNumber] = Field(..., max_length=1, min_length=1)


class UpdateGroupRequest(BaseModel):
    GroupId: ResourceId
    IdentityStoreId_1: IdentityStoreId = Field(..., alias='IdentityStoreId')
    Operations: AttributeOperations


class UpdateUserRequest(BaseModel):
    IdentityStoreId_1: IdentityStoreId = Field(..., alias='IdentityStoreId')
    Operations: AttributeOperations
    UserId: ResourceId


class User(BaseModel):
    Addresses_1: Optional[Addresses] = Field(None, alias='Addresses')
    DisplayName: Optional[SensitiveStringType] = None
    Emails_1: Optional[Emails] = Field(None, alias='Emails')
    ExternalIds_1: Optional[ExternalIds] = Field(None, alias='ExternalIds')
    IdentityStoreId_1: IdentityStoreId = Field(..., alias='IdentityStoreId')
    Locale: Optional[SensitiveStringType] = None
    Name_1: Optional[Name] = Field(None, alias='Name')
    NickName: Optional[SensitiveStringType] = None
    PhoneNumbers_1: Optional[PhoneNumbers] = Field(None, alias='PhoneNumbers')
    PreferredLanguage: Optional[SensitiveStringType] = None
    ProfileUrl: Optional[SensitiveStringType] = None
    Timezone: Optional[SensitiveStringType] = None
    Title: Optional[SensitiveStringType] = None
    UserId: ResourceId
    UserName_1: Optional[UserName] = Field(None, alias='UserName')
    UserType: Optional[SensitiveStringType] = None


class Users(RootModel[List[User]]):
    root: List[User]


class AlternateIdentifier(BaseModel):
    ExternalId_1: Optional[ExternalId] = Field(None, alias='ExternalId')
    UniqueAttribute_1: Optional[UniqueAttribute] = Field(None, alias='UniqueAttribute')


class CreateGroupMembershipRequest(BaseModel):
    GroupId: ResourceId
    IdentityStoreId_1: IdentityStoreId = Field(..., alias='IdentityStoreId')
    MemberId_1: MemberId = Field(..., alias='MemberId')


class CreateUserRequest(BaseModel):
    Addresses_1: Optional[Addresses] = Field(None, alias='Addresses')
    DisplayName: Optional[SensitiveStringType] = None
    Emails_1: Optional[Emails] = Field(None, alias='Emails')
    IdentityStoreId_1: IdentityStoreId = Field(..., alias='IdentityStoreId')
    Locale: Optional[SensitiveStringType] = None
    Name_1: Optional[Name] = Field(None, alias='Name')
    NickName: Optional[SensitiveStringType] = None
    PhoneNumbers_1: Optional[PhoneNumbers] = Field(None, alias='PhoneNumbers')
    PreferredLanguage: Optional[SensitiveStringType] = None
    ProfileUrl: Optional[SensitiveStringType] = None
    Timezone: Optional[SensitiveStringType] = None
    Title: Optional[SensitiveStringType] = None
    UserName_1: Optional[UserName] = Field(None, alias='UserName')
    UserType: Optional[SensitiveStringType] = None


class DescribeGroupMembershipResponse(BaseModel):
    GroupId: ResourceId
    IdentityStoreId_1: IdentityStoreId = Field(..., alias='IdentityStoreId')
    MemberId_1: MemberId = Field(..., alias='MemberId')
    MembershipId: ResourceId


class DescribeGroupResponse(BaseModel):
    Description: Optional[SensitiveStringType] = None
    DisplayName: Optional[GroupDisplayName] = None
    ExternalIds_1: Optional[ExternalIds] = Field(None, alias='ExternalIds')
    GroupId: ResourceId
    IdentityStoreId_1: IdentityStoreId = Field(..., alias='IdentityStoreId')


class DescribeUserResponse(BaseModel):
    Addresses_1: Optional[Addresses] = Field(None, alias='Addresses')
    DisplayName: Optional[SensitiveStringType] = None
    Emails_1: Optional[Emails] = Field(None, alias='Emails')
    ExternalIds_1: Optional[ExternalIds] = Field(None, alias='ExternalIds')
    IdentityStoreId_1: IdentityStoreId = Field(..., alias='IdentityStoreId')
    Locale: Optional[SensitiveStringType] = None
    Name_1: Optional[Name] = Field(None, alias='Name')
    NickName: Optional[SensitiveStringType] = None
    PhoneNumbers_1: Optional[PhoneNumbers] = Field(None, alias='PhoneNumbers')
    PreferredLanguage: Optional[SensitiveStringType] = None
    ProfileUrl: Optional[SensitiveStringType] = None
    Timezone: Optional[SensitiveStringType] = None
    Title: Optional[SensitiveStringType] = None
    UserId: ResourceId
    UserName_1: Optional[UserName] = Field(None, alias='UserName')
    UserType: Optional[SensitiveStringType] = None


class GetGroupIdRequest(BaseModel):
    AlternateIdentifier_1: AlternateIdentifier = Field(..., alias='AlternateIdentifier')
    IdentityStoreId_1: IdentityStoreId = Field(..., alias='IdentityStoreId')


class GetGroupMembershipIdRequest(BaseModel):
    GroupId: ResourceId
    IdentityStoreId_1: IdentityStoreId = Field(..., alias='IdentityStoreId')
    MemberId_1: MemberId = Field(..., alias='MemberId')


class GetUserIdRequest(BaseModel):
    AlternateIdentifier_1: AlternateIdentifier = Field(..., alias='AlternateIdentifier')
    IdentityStoreId_1: IdentityStoreId = Field(..., alias='IdentityStoreId')


class GroupMembership(BaseModel):
    GroupId: Optional[ResourceId] = None
    IdentityStoreId_1: IdentityStoreId = Field(..., alias='IdentityStoreId')
    MemberId_1: Optional[MemberId] = Field(None, alias='MemberId')
    MembershipId: Optional[ResourceId] = None


class GroupMembershipExistenceResult(BaseModel):
    GroupId: Optional[ResourceId] = None
    MemberId_1: Optional[MemberId] = Field(None, alias='MemberId')
    MembershipExists: Optional[SensitiveBooleanType] = None


class GroupMembershipExistenceResults(RootModel[List[GroupMembershipExistenceResult]]):
    root: List[GroupMembershipExistenceResult]


class GroupMemberships(RootModel[List[GroupMembership]]):
    root: List[GroupMembership]


class IsMemberInGroupsRequest(BaseModel):
    GroupIds_1: GroupIds = Field(..., alias='GroupIds')
    IdentityStoreId_1: IdentityStoreId = Field(..., alias='IdentityStoreId')
    MemberId_1: MemberId = Field(..., alias='MemberId')


class IsMemberInGroupsResponse(BaseModel):
    Results: GroupMembershipExistenceResults


class ListGroupMembershipsForMemberRequest(BaseModel):
    IdentityStoreId_1: IdentityStoreId = Field(..., alias='IdentityStoreId')
    MaxResults_1: Optional[MaxResults] = Field(None, alias='MaxResults')
    MemberId_1: MemberId = Field(..., alias='MemberId')
    NextToken_1: Optional[NextToken] = Field(None, alias='NextToken')


class ListGroupMembershipsForMemberResponse(BaseModel):
    GroupMemberships_1: GroupMemberships = Field(..., alias='GroupMemberships')
    NextToken_1: Optional[NextToken] = Field(None, alias='NextToken')


class ListGroupMembershipsResponse(BaseModel):
    GroupMemberships_1: GroupMemberships = Field(..., alias='GroupMemberships')
    NextToken_1: Optional[NextToken] = Field(None, alias='NextToken')


class ListUsersResponse(BaseModel):
    NextToken_1: Optional[NextToken] = Field(None, alias='NextToken')
    Users_1: Users = Field(..., alias='Users')
